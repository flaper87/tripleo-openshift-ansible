heat_template_version: ocata

description: Triggers a Mistral workflow for the deployment of OpenShift

parameters:
  OpenShiftAnsibleWorkflowName:
    type: string
    description: Name of the Mistral workflow deploying OpenShift
    default: openshift-ansible
  RoleNetIpMap:
    default: {}
    type: json

resources:
  openshift_ansible_workflow:
    type: OS::Mistral::ExternalResource
    properties:
      actions:
        CREATE:
          workflow: {get_param: OpenShiftAnsibleWorkflowName}
      input:
        playbook:
          - name: Register nodes
            hosts: localhost

            tasks:
              - add_host: name={{item}} groups=nodes
                with_items: "{{groups['compute']}}"
              - add_host: name={{item}} groups=nodes,masters
                with_items: "{{groups['controller']}}"
              - add_host: name={{item}} groups=OSEv3
                with_items: "{{groups['overcloud']}}"

          - hosts: OSEv3
            vars:
              ansible_become: true
              ansible_become_user: root
              ansible_ssh_user: heat-admin
              containerized: true
              openshift_use_dnsmasq: False
              openshift_deployment_type: origin
              openshift_release: v1.5
              openshift_image_tag: v1.5.0
              enable_excluders: False

          - include: openshift-ansible/playbooks/byo/config.yml
        inventory:
          overcloud:
            children:
              compute:
                hosts:
                  map_merge:
                    repeat:
                      template:
                        IP:
                          containerized: true
                          openshift_schedulable: true
                          openshift_excluder_on: false
                          connect_to: IP
                          openshift_ip: IP
                          openshift_hostname: IP
                          openshift_public_ip: IP
                          openshift_public_hostname: IP
                      for_each:
                        IP: {get_param: [RoleNetIpMap, Compute, ctlplane]}
              controller:
                hosts:
                  map_merge:
                    repeat:
                      template:
                        IP:
                          containerized: true
                          openshift_schedulable: true
                          openshift_excluder_on: false
                          connect_to: IP
                          openshift_ip: IP
                          openshift_hostname: IP
                          openshift_public_ip: IP
                          openshift_public_hostname: IP
                      for_each:
                        IP: {get_param: [RoleNetIpMap, Controller, ctlplane]}

